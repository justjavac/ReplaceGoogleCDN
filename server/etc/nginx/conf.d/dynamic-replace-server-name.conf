# 将 domain.com  更换成为你自己的域名, 域名解析需要支持泛域名
# _xn--3px_仅仅是分隔符号，可以自己定义

#动态域名替换

#获得目标主机地址 host
map $host $custom_des_host {
     default $host ;
     ~^1_([\w|-]+?)_xn--3px_([\w|-]+?)\.proxy\.\w+?.com$ $1.$2;
     ~^2_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_(\w+?)\.proxy\.\w+?.com$ $1.$2.$3;
     ~^3_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)\.proxy\.\w+?.com$ $1.$2.$3.$4;
     ~^4_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)\.proxy\.\w+?.com$ $1.$2.$3.$4.$5;
     ~^5_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)\.proxy\.\w+?.com$ $1.$2.$3.$4.$5.$6.$5.$6;
}
# 定制referer
map $http_referer $custom_des_referer {
    default $http_origin ;
    ~^(http|https)://1_([\w|-]+?)_xn--3px_([\w|-]+?)\.proxy\.\w+?.com/(.*)$ $1://$2.$3/$4 ;
    ~^(http|https)://2_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_(\w+?)\.proxy\.\w+?.com/(.*)$ $1://$2.$3.$4/$5 ;
    ~^(http|https)://3_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)\.proxy\.\w+?.com/(.*)$ $1://$2.$3.$4.$5/$6 ;
    ~^(http|https)://4_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)\.proxy\.\w+?.com/(.*)$ $1://$2.$3.$4.$5.$6/$7 ;
    ~^(http|https)://5_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)\.proxy\.\w+?.com/(.*)$ $1://$2.$3.$4.$5.$6.$7/$8 ;

}
# 定制origin
map $http_referer $custom_des_origin {
    default $http_origin ;
    ~^(http|https)://1_([\w|-]+?)_xn--3px_([\w|-]+?)\.proxy\.\w+?.com/(.*)$ $1://$2.$3/$4 ;
    ~^(http|https)://2_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_(\w+?)\.proxy\.\w+?.com/(.*)$ $1://$2.$3.$4/$5 ;
    ~^(http|https)://3_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)\.proxy\.\w+?.com/(.*)$ $1://$2.$3.$4.$5/$6 ;
    ~^(http|https)://4_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)\.proxy\.\w+?.com/(.*)$ $1://$2.$3.$4.$5.$6/$7 ;
    ~^(http|https)://5_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)_xn--3px_([\w|-]+?)\.proxy\.\w+?.com/(.*)$ $1://$2.$3.$4.$5.$6.$7/$8 ;

}

server {
    listen  80 ;
    listen  [::]:80 ;
    # 将 domain.com  更换成为你自己的域名, 域名解析需要支持泛域名 *.proxy.domain.com
    server_name   ~^(?<subdomain>.+)\.proxy\.domain.com$;
    return 307 https://$host$request_uri;
}

server {
    listen  443 ssl http2 ;
    listen  [::]:443 ssl http2 ;
    # 将 domain.com  更换成为你自己的域名, 域名解析需要支持泛域名 *.proxy.domain.com
    server_name   ~^(?<subdomain>.+)\.proxy\.domain.com$;

    charset utf-8;

    # access_log  logs/access.log  main;

    # SSL Configuration 配置例子参考  https://ssl-config.mozilla.org/#server=nginx

    ssl_certificate     /tls/wildcard.domain.com.fullchain.pem;
    ssl_certificate_key /tls/wildcard.domain.com.key.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;
    ssl_protocols  TLSv1.3;
    ssl_prefer_server_ciphers off;

    # let's encrypt免费证书
    # https://letsencrypt.org/
    # https://github.com/acmesh-official/acme.sh.git

    resolver  1.1.1.1  ; # dns 解析




    # 简单cookie权限验证，cookie 必需存在才能用
    # 存在意义，阻止滥用
    # token=$(cat /proc/sys/kernel/random/uuid)

    # if ( $cookie_proxy_token != "883bedeb-82a9-4ba6-9383-693eeb453bca") {
    #     return 401 '{"status":"401","result":"您没有权限,请联系管理员","message":"unauthorized"}';
    # }

    include conf.d/custom-proxy-header.item;
    location / {

       #if ( $cookie_auth_token != "87deb710-b0d8-11ec-b5e4-8b88891e01b6") {
       #      return 403 '{"status":"403","result":"您没有权限,请联系管理员","message":"unauthorized"}';
       #}


        proxy_pass "$scheme://$custom_des_host$request_uri";

        proxy_set_header Host    $custom_des_host;
        proxy_set_header Referer $custom_des_referer;
        proxy_set_header Origin $custom_des_origin;

        proxy_ignore_headers "Set-Cookie";
        include conf.d/hidden_proxy_headers.item;

        proxy_read_timeout 30s;
        proxy_send_timeout 30s;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection  $connection_upgrade;
        proxy_set_header        Cookie "";
        proxy_ssl_protocols  TLSv1.2 TLSv1.3;
        proxy_ssl_session_reuse off;
        proxy_ssl_server_name on ;

    }
}
